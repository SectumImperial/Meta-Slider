!function(){"use strict";var e,t={774:function(e,t,r){var i=r(755),n=r.n(i);r(272);function s(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.root=t,this.content=t.querySelector(".slider__content"),this.init()}var t,r,i;return t=e,(r=[{key:"init",value:function(){var e,t;this.findElems(),this.stateObject={min:this.min||0,max:this.max||10,valueFrom:this.from||0,valueTo:this.to||0,step:this.step||1,scalePercentGap:this.gap||1,scaleMarks:this.marks,isTip:this.tip,isProgress:this.progress,isRange:this.range,isVertical:this.vertical},this.addSlider(this.stateObject),this.updateForm(),(null===(e=this.content)||void 0===e?void 0:e.querySelector(".plugin-slider__thumb"))&&(this.thumb=null===(t=this.content)||void 0===t?void 0:t.querySelector(".plugin-slider__thumb")),this.addListeners()}},{key:"addListeners",value:function(){var e,t,r,i,n=this;if(this.form){var s=[];this.form.querySelectorAll(".slider__input").forEach((function(e){e&&s.push(e)})),s.forEach((function(e){return e.addEventListener("change",n.updateState.bind(n))}))}null===(e=this.content)||void 0===e||e.addEventListener("mousedown",this.handleClick.bind(this)),null===(t=this.content)||void 0===t||t.addEventListener("click",this.updateForm.bind(this)),this.thumb&&(null===(r=this.thumb)||void 0===r||r.addEventListener("keydown",this.handelKey.bind(this)),null===(i=this.thumb)||void 0===i||i.addEventListener("touchmove",this.touchDown.bind(this),{passive:!0}))}},{key:"updateState",value:function(e){var t=e.target;if(t instanceof HTMLInputElement){var r=t.dataset.role,i=this.mapElems.get("".concat(r));if(void 0===i)return;var n,s=this.slider.getValue(i);void 0!==(n="boolean"==typeof s?t.checked:"number"==typeof s?Number(t.value):void 0)&&(this.slider.setValue("".concat(i),n),this.slider.setNewState(this.slider.getState()),"boolean"!=typeof this.slider.getValue("".concat(i))&&"scalePercentGap"!==i||(this.content&&(this.content.innerHTML=""),this.addSlider(this.slider.getState())),this.updateForm())}}},{key:"addSlider",value:function(e){this.content&&(this.slider=n()(this.content).sliderPlugin(e))}},{key:"findElems",value:function(){if(this.mapElems=new Map,this.form=this.root.querySelector(".slider__form"),this.form){var e=this.form.querySelector(".slider__input[data-role = min]");this.min=Number(e.value),this.mapElems.set("min","min");var t=this.form.querySelector(".slider__input[data-role = max]");this.max=Number(t.value),this.mapElems.set("max","max");var r=this.form.querySelector(".slider__input[data-role = step]");this.step=Number(r.value),this.mapElems.set("step","step");var i=this.form.querySelector(".slider__input[data-role = from]");this.from=Number(i.value),this.mapElems.set("from","valueFrom");var n=this.form.querySelector(".slider__input[data-role = to]");this.to=Number(n.value),this.mapElems.set("to","valueTo");var s=this.form.querySelector(".slider__input[data-role = gap]");s.value&&(this.gap=Number(s.value)),this.mapElems.set("gap","scalePercentGap");var a=this.form.querySelector(".slider__input[data-role = range]");this.range=a.checked,this.range&&(n.disabled=!1),this.range||(n.disabled=!0),this.mapElems.set("range","isRange");var o=this.form.querySelector(".slider__input[data-role = marks]");this.marks=o.checked,this.marks&&(s.disabled=!1),this.marks||(s.disabled=!0),this.mapElems.set("marks","scaleMarks");var l=this.form.querySelector(".slider__input[data-role = tip]");this.tip=l.checked,this.mapElems.set("tip","isTip");var u=this.form.querySelector(".slider__input[data-role = progress]");this.progress=u.checked,this.mapElems.set("progress","isProgress");var c=this.form.querySelector(".slider__input[data-role = vertical]");this.vertical=c.checked,this.mapElems.set("vertical","isVertical")}}},{key:"updateForm",value:function(){var e=this;this.mapElems.forEach((function(t,r){var i,n=null===(i=e.form)||void 0===i?void 0:i.querySelector(".slider__input[data-role = ".concat(r,"]"));n instanceof HTMLInputElement&&(n&&"number"==typeof e.slider.getValue(t)&&(n.value="".concat(e.slider.getValue("".concat(t)))),n&&"boolean"==typeof e.slider.getValue(t)&&(e.slider.getValue("".concat(t))?n.checked=!0:n.checked=!1),e.findElems())}))}},{key:"handleClick",value:function(){var e,t,r=this,i=function(){return r.updateForm()};null===(e=this.content)||void 0===e||e.addEventListener("mousemove",i),null===(t=this.content)||void 0===t||t.addEventListener("mouseup",(function e(){var t,n;null===(t=r.content)||void 0===t||t.removeEventListener("mousemove",i),null===(n=r.content)||void 0===n||n.removeEventListener("mouseup",e)}))}},{key:"handelKey",value:function(e){var t=e.key;"ArrowLeft"!==t&&"ArrowUp"!==t&&"ArrowRight"!==t&&"ArrowDown"!==t||this.updateForm()}},{key:"touchDown",value:function(){this.updateForm()}}])&&s(t.prototype,r),i&&s(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}();document.querySelectorAll(".slider").forEach((function(e){return new a(e)}))}},r={};function i(e){var n=r[e];if(void 0!==n)return n.exports;var s=r[e]={exports:{}};return t[e].call(s.exports,s,s.exports,i),s.exports}i.m=t,e=[],i.O=function(t,r,n,s){if(!r){var a=1/0;for(c=0;c<e.length;c++){r=e[c][0],n=e[c][1],s=e[c][2];for(var o=!0,l=0;l<r.length;l++)(!1&s||a>=s)&&Object.keys(i.O).every((function(e){return i.O[e](r[l])}))?r.splice(l--,1):(o=!1,s<a&&(a=s));if(o){e.splice(c--,1);var u=n();void 0!==u&&(t=u)}}return t}s=s||0;for(var c=e.length;c>0&&e[c-1][2]>s;c--)e[c]=e[c-1];e[c]=[r,n,s]},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,{a:t}),t},i.d=function(e,t){for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={577:0,309:0};i.O.j=function(t){return 0===e[t]};var t=function(t,r){var n,s,a=r[0],o=r[1],l=r[2],u=0;if(a.some((function(t){return 0!==e[t]}))){for(n in o)i.o(o,n)&&(i.m[n]=o[n]);if(l)var c=l(i)}for(t&&t(r);u<a.length;u++)s=a[u],i.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return i.O(c)},r=self.webpackChunkmeta_slider=self.webpackChunkmeta_slider||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var n=i.O(void 0,[755,272],(function(){return i(774)}));n=i.O(n)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,