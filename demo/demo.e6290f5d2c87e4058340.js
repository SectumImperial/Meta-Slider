!function(){"use strict";var e,t={774:function(e,t,r){var i=r(755),n=r.n(i);r(272);function s(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.root=t,this.init()}var t,r,i;return t=e,(r=[{key:"init",value:function(){this.findElems(),this.stateObject={min:this.min,max:this.max,valueFrom:this.from||0,valueTo:this.to||0,step:this.step||1,scalePercentGap:this.gap||1,scaleMarks:this.marks,isTip:this.tip,isProgress:this.progress,isRange:this.range,isVertical:this.vertical},this.addSlider(this.stateObject),this.updateForm(),this.addListeners()}},{key:"addListeners",value:function(){var e,t,r,i,n=this;if(this.form){var s=[];this.form.querySelectorAll(".slider__input").forEach((function(e){e&&s.push(e)})),s.forEach((function(e){return e.addEventListener("change",n.updateState.bind(n))}))}null===(e=this.content)||void 0===e||e.addEventListener("mousedown",this.handleClick.bind(this)),null===(t=this.content)||void 0===t||t.addEventListener("click",this.updateForm.bind(this)),this.thumb&&(null===(r=this.thumb)||void 0===r||r.addEventListener("keydown",this.handelKey.bind(this)),null===(i=this.thumb)||void 0===i||i.addEventListener("touchmove",this.touchDown.bind(this),{passive:!0}))}},{key:"updateState",value:function(e){var t=e.target;if(t instanceof HTMLInputElement){var r=t.dataset.role,i=this.mapElems.get("".concat(r));if(void 0===i)return;var n,s=this.slider.getValue(i);void 0!==(n="boolean"==typeof s?t.checked:"number"==typeof s?Number(t.value):void 0)&&(this.slider.setValue("".concat(i),n),"valueFrom"!==i&&"valueTo"!==i&&(this.content&&(this.content.innerHTML=""),this.addSlider(this.slider.getState())),this.updateForm())}}},{key:"addSlider",value:function(e){this.content&&(this.slider=n()(this.content).sliderPlugin(e))}},{key:"findElems",value:function(){var e,t;if(this.mapElems=new Map,this.content=this.root.querySelector(".slider__content"),this.form=this.root.querySelector(".slider__form"),this.form){var r=this.form.querySelector(".slider__input[data-role = min]");this.min=Number(r.value),this.mapElems.set("min","min");var i=this.form.querySelector(".slider__input[data-role = max]");this.max=Number(i.value),this.mapElems.set("max","max");var n=this.form.querySelector(".slider__input[data-role = step]");this.step=Number(n.value),this.mapElems.set("step","step");var s=this.form.querySelector(".slider__input[data-role = from]");this.from=Number(s.value),s.step="".concat(this.step),this.mapElems.set("from","valueFrom");var o=this.form.querySelector(".slider__input[data-role = to]");this.to=Number(o.value),o.step="".concat(this.step),this.mapElems.set("to","valueTo");var a=this.form.querySelector(".slider__input[data-role = gap]");a.value&&(this.gap=Number(a.value)),this.mapElems.set("gap","scalePercentGap");var l=this.form.querySelector(".slider__input[data-role = range]");this.range=l.checked,this.range&&(o.disabled=!1),this.range||(o.disabled=!0),this.mapElems.set("range","isRange");var u=this.form.querySelector(".slider__input[data-role = marks]");this.marks=u.checked,this.marks&&(a.disabled=!1),this.marks||(a.disabled=!0),this.mapElems.set("marks","scaleMarks");var c=this.form.querySelector(".slider__input[data-role = tip]");this.tip=c.checked,this.mapElems.set("tip","isTip");var h=this.form.querySelector(".slider__input[data-role = progress]");this.progress=h.checked,this.mapElems.set("progress","isProgress");var d=this.form.querySelector(".slider__input[data-role = vertical]");this.vertical=d.checked,this.mapElems.set("vertical","isVertical"),(null===(e=this.content)||void 0===e?void 0:e.querySelector(".plugin-slider__thumb"))&&(this.thumb=null===(t=this.content)||void 0===t?void 0:t.querySelector(".plugin-slider__thumb"))}}},{key:"updateForm",value:function(){var e=this;this.mapElems.forEach((function(t,r){var i,n=null===(i=e.form)||void 0===i?void 0:i.querySelector(".slider__input[data-role = ".concat(r,"]"));n instanceof HTMLInputElement&&(n&&"number"==typeof e.slider.getValue(t)&&(n.value="".concat(e.slider.getValue("".concat(t)))),n&&"boolean"==typeof e.slider.getValue(t)&&(e.slider.getValue("".concat(t))?n.checked=!0:n.checked=!1),e.findElems())}))}},{key:"handleClick",value:function(){var e,t,r=this,i=function(){return r.updateForm()};null===(e=this.content)||void 0===e||e.addEventListener("mousemove",i),null===(t=this.content)||void 0===t||t.addEventListener("mouseup",(function e(){var t,n;null===(t=r.content)||void 0===t||t.removeEventListener("mousemove",i),null===(n=r.content)||void 0===n||n.removeEventListener("mouseup",e)}))}},{key:"handelKey",value:function(e){var t=e.key;"ArrowLeft"!==t&&"ArrowUp"!==t&&"ArrowRight"!==t&&"ArrowDown"!==t||this.updateForm()}},{key:"touchDown",value:function(){this.updateForm()}}])&&s(t.prototype,r),i&&s(t,i),Object.defineProperty(t,"prototype",{writable:!1}),e}();document.querySelectorAll(".slider").forEach((function(e){return new o(e)}))}},r={};function i(e){var n=r[e];if(void 0!==n)return n.exports;var s=r[e]={exports:{}};return t[e].call(s.exports,s,s.exports,i),s.exports}i.m=t,e=[],i.O=function(t,r,n,s){if(!r){var o=1/0;for(c=0;c<e.length;c++){r=e[c][0],n=e[c][1],s=e[c][2];for(var a=!0,l=0;l<r.length;l++)(!1&s||o>=s)&&Object.keys(i.O).every((function(e){return i.O[e](r[l])}))?r.splice(l--,1):(a=!1,s<o&&(o=s));if(a){e.splice(c--,1);var u=n();void 0!==u&&(t=u)}}return t}s=s||0;for(var c=e.length;c>0&&e[c-1][2]>s;c--)e[c]=e[c-1];e[c]=[r,n,s]},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,{a:t}),t},i.d=function(e,t){for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={577:0,309:0};i.O.j=function(t){return 0===e[t]};var t=function(t,r){var n,s,o=r[0],a=r[1],l=r[2],u=0;if(o.some((function(t){return 0!==e[t]}))){for(n in a)i.o(a,n)&&(i.m[n]=a[n]);if(l)var c=l(i)}for(t&&t(r);u<o.length;u++)s=o[u],i.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return i.O(c)},r=self.webpackChunkmeta_slider=self.webpackChunkmeta_slider||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var n=i.O(void 0,[755,272],(function(){return i(774)}));n=i.O(n)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,