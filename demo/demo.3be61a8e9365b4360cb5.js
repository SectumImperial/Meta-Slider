!function(){"use strict";var t,e={868:function(t,e,i){var s=i(755),n=i.n(s);i(390);class r{constructor(t){this.root=t,this.init()}init(){this.findElements(),this.stateObject={min:this.min,max:this.max,valueFrom:this.from||0,valueTo:this.to||0,step:this.step||1,scalePercentGap:this.gap||1,scaleMarks:this.marks,isTip:this.tip,isProgress:this.progress,isRange:this.range,isVertical:this.vertical},this.addSlider(this.stateObject),this.updateForm(),this.addListeners()}addListeners(){var t,e,i,s;if(this.form){const t=[];this.form.querySelectorAll(".slider__input").forEach((e=>{e&&t.push(e)})),t.forEach((t=>t.addEventListener("change",this.handleItemChange.bind(this))))}null===(t=this.content)||void 0===t||t.addEventListener("mousedown",this.handleContentMouseDown.bind(this)),null===(e=this.content)||void 0===e||e.addEventListener("click",this.handleContentClick.bind(this)),this.thumb&&(null===(i=this.thumb)||void 0===i||i.addEventListener("keydown",this.handleThumbKeyPress.bind(this)),null===(s=this.thumb)||void 0===s||s.addEventListener("touchmove",this.handleThumbTouchMove.bind(this),{passive:!0}))}handleItemChange(t){this.toggleIndicator();const{target:e}=t;if(e instanceof HTMLInputElement){const{role:t}=e.dataset,i=this.mapElements.get("".concat(t));if(void 0===i)return;const s=this.slider.getValue(i);let n;n="boolean"==typeof s?e.checked:"number"==typeof s?Number(e.value):void 0,void 0!==n&&(this.slider.setValue("".concat(i),n),"valueFrom"!==i&&"valueTo"!==i&&(this.content&&(this.content.innerHTML=""),this.addSlider(this.slider.getState())),this.updateForm())}this.toggleIndicator()}toggleIndicator(){null!==this.indicator&&this.indicator.classList.toggle("main__slider-indicator_active")}addSlider(t){this.content&&(this.slider=n()(this.content).sliderPlugin(t))}findElements(){var t,e;if(this.indicator=this.root.querySelector(".main__slider-indicator"),this.mapElements=new Map,this.content=this.root.querySelector(".slider__content"),this.form=this.root.querySelector(".slider__form"),!this.form)return;const i=this.form.querySelector(".slider__input[data-role = min]");this.min=Number(i.value),this.mapElements.set("min","min");const s=this.form.querySelector(".slider__input[data-role = max]");this.max=Number(s.value),this.mapElements.set("max","max");const n=this.form.querySelector(".slider__input[data-role = step]");this.step=Number(n.value),this.mapElements.set("step","step");const r=this.form.querySelector(".slider__input[data-role = from]");this.from=Number(r.value),r.step="".concat(this.step),this.mapElements.set("from","valueFrom");const o=this.form.querySelector(".slider__input[data-role = to]");this.to=Number(o.value),o.step="".concat(this.step),this.mapElements.set("to","valueTo");const a=this.form.querySelector(".slider__input[data-role = gap]");a.value&&(this.gap=Number(a.value)),this.mapElements.set("gap","scalePercentGap");const l=this.form.querySelector(".slider__input[data-role = range]");this.range=l.checked,this.range&&(o.disabled=!1),this.range||(o.disabled=!0),this.mapElements.set("range","isRange");const h=this.form.querySelector(".slider__input[data-role = marks]");this.marks=h.checked,this.marks&&(a.disabled=!1),this.marks||(a.disabled=!0),this.mapElements.set("marks","scaleMarks");const d=this.form.querySelector(".slider__input[data-role = tip]");this.tip=d.checked,this.mapElements.set("tip","isTip");const c=this.form.querySelector(".slider__input[data-role = progress]");this.progress=c.checked,this.mapElements.set("progress","isProgress");const u=this.form.querySelector(".slider__input[data-role = vertical]");this.vertical=u.checked,this.mapElements.set("vertical","isVertical"),(null===(t=this.content)||void 0===t?void 0:t.querySelector(".plugin-slider__thumb"))&&(this.thumb=null===(e=this.content)||void 0===e?void 0:e.querySelector(".plugin-slider__thumb"))}updateForm(){this.mapElements.forEach(((t,e)=>{var i;const s=null===(i=this.form)||void 0===i?void 0:i.querySelector(".slider__input[data-role = ".concat(e,"]"));s instanceof HTMLInputElement&&(s&&"number"==typeof this.slider.getValue(t)&&(s.value="".concat(this.slider.getValue("".concat(t)))),s&&"boolean"==typeof this.slider.getValue(t)&&(this.slider.getValue("".concat(t))?s.checked=!0:s.checked=!1),this.findElements())}))}handleContentClick(){this.toggleIndicator(),this.updateForm(),this.toggleIndicator()}handleContentMouseDown(){var t,e;this.toggleIndicator();const i=()=>{this.updateForm()},s=()=>{var t,e;null===(t=this.content)||void 0===t||t.removeEventListener("mousemove",i),null===(e=this.content)||void 0===e||e.removeEventListener("mouseup",s),this.toggleIndicator()};null===(t=this.content)||void 0===t||t.addEventListener("mousemove",i),null===(e=this.content)||void 0===e||e.addEventListener("mouseup",s)}handleThumbKeyPress(t){this.toggleIndicator();const{key:e}=t;"ArrowLeft"!==e&&"ArrowUp"!==e&&"ArrowRight"!==e&&"ArrowDown"!==e||this.updateForm(),this.toggleIndicator()}handleThumbTouchMove(){this.toggleIndicator();const t=t=>{t.stopImmediatePropagation(),this.updateForm()},e=()=>{document.removeEventListener("touchmove",t),document.removeEventListener("touchend",e),this.toggleIndicator()};document.addEventListener("touchmove",t),document.addEventListener("touchend",e)}}document.querySelectorAll(".main__slider").forEach((t=>new r(t)))}},i={};function s(t){var n=i[t];if(void 0!==n)return n.exports;var r=i[t]={exports:{}};return e[t].call(r.exports,r,r.exports,s),r.exports}s.m=e,t=[],s.O=function(e,i,n,r){if(!i){var o=1/0;for(d=0;d<t.length;d++){i=t[d][0],n=t[d][1],r=t[d][2];for(var a=!0,l=0;l<i.length;l++)(!1&r||o>=r)&&Object.keys(s.O).every((function(t){return s.O[t](i[l])}))?i.splice(l--,1):(a=!1,r<o&&(o=r));if(a){t.splice(d--,1);var h=n();void 0!==h&&(e=h)}}return e}r=r||0;for(var d=t.length;d>0&&t[d-1][2]>r;d--)t[d]=t[d-1];t[d]=[i,n,r]},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,{a:e}),e},s.d=function(t,e){for(var i in e)s.o(e,i)&&!s.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},function(){var t={577:0,309:0};s.O.j=function(e){return 0===t[e]};var e=function(e,i){var n,r,o=i[0],a=i[1],l=i[2],h=0;if(o.some((function(e){return 0!==t[e]}))){for(n in a)s.o(a,n)&&(s.m[n]=a[n]);if(l)var d=l(s)}for(e&&e(i);h<o.length;h++)r=o[h],s.o(t,r)&&t[r]&&t[r][0](),t[r]=0;return s.O(d)},i=self.webpackChunkmeta_slider=self.webpackChunkmeta_slider||[];i.forEach(e.bind(null,0)),i.push=e.bind(null,i.push.bind(i))}();var n=s.O(void 0,[755,390],(function(){return s(868)}));n=s.O(n)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,